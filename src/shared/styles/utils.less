// Define
@generate-colors: {
  1: '@grey-50', '@grey-100', '@grey-200', '@grey-300', '@grey-400', '@grey-500', '@grey-600', '@grey-700', '@grey-800', '@grey-900';
  2: '@main-100', '@main-200', '@main-300', '@main-400', '@main-500';
};

// Spacing
each(range(0, 20, 0.25), {
  @label: replace(~"@{value}", "\.", "_");

  .m-@{label} {
    margin: ~"@{value}rem";

    &-imp {
      margin: ~"@{value}rem" !important;
    }
  }

  .ml-@{label} {
    margin-left: ~"@{value}rem";

    &-imp {
      margin-left: ~"@{value}rem" !important;
    }
  }

  .mr-@{label} {
    margin-right: ~"@{value}rem";

    &-imp {
      margin-right: ~"@{value}rem" !important;
    }
  }

  .mb-@{label} {
    margin-bottom: ~"@{value}rem";

    &-imp {
      margin-bottom: ~"@{value}rem" !important;
    }
  }

  .mt-@{label} {
    margin-top: ~"@{value}rem";

    &-imp {
      margin-top: ~"@{value}rem" !important;
    }
  }

  .mx-@{label} {
    margin-left: ~"@{value}rem";
    margin-right: ~"@{value}rem";

    &-imp {
      margin-left: ~"@{value}rem" !important;
      margin-right: ~"@{value}rem" !important;
    }
  }

  .my-@{label} {
    margin-top: ~"@{value}rem";
    margin-bottom: ~"@{value}rem";

    &-imp {
      margin-top: ~"@{value}rem" !important;
      margin-bottom: ~"@{value}rem" !important;
    }
  }

  .p-@{label} {
    padding: ~"@{value}rem";

    &-imp {
      padding: ~"@{value}rem" !important;
    }
  }

  .pl-@{label} {
    padding-left: ~"@{value}rem";

    &-imp {
      padding-left: ~"@{value}rem" !important;
    }
  }

  .pr-@{label} {
    padding-right: ~"@{value}rem";

    &-imp {
      padding-right: ~"@{value}rem" !important;
    }
  }

  .pb-@{label} {
    padding-bottom: ~"@{value}rem";

    &-imp {
      padding-bottom: ~"@{value}rem" !important;
    }
  }

  .pt-@{label} {
    padding-top: ~"@{value}rem";

    &-imp {
      padding-top: ~"@{value}rem" !important;
    }
  }

  .px-@{label} {
    padding-left: ~"@{value}rem";
    padding-right: ~"@{value}rem";

    &-imp {
      padding-left: ~"@{value}rem" !important;
      padding-right: ~"@{value}rem" !important;
    }
  }

  .py-@{label} {
    padding-top: ~"@{value}rem";
    padding-bottom: ~"@{value}rem";

    &-imp {
      padding-top: ~"@{value}rem" !important;
      padding-bottom: ~"@{value}rem" !important;
    }
  }
});

.ml-auto {
  margin-left: auto;
}

.mr-auto {
  margin-right: auto;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mt-auto {
  margin-top: auto;
}

.mb-auto {
  margin-bottom: auto;
}

.my-auto {
  margin-bottom: auto;
  margin-top: auto;
}

.mt-antd-label {
  margin-top: 28px;
}

// Text
.text-red {
  color: @label-required-color;
}

each(@generate-colors, {
  .text {
    each(@value, .(@v) {
      @suffix: replace(~"@{v}", "@", "");

      &-@{suffix} {
        color: @@suffix;
      }
    });
  }
});

.text-main {
  color: @main-color;
}

.text-secondary {
  color: @main-color-secondary;
}

.text-grey {
  color: @grey-500;
}

.text-black {
  color: @main-color-black;
}

.text-color {
  color: @text-color;

  &-imp {
    color: @text-color !important;
  }
}

.text-white {
  color: @main-color-white;
}

.text-hint {
  color: @text-color-hint;
}

.text-xl {
  font-size: @text-xl;
}

.text-lg {
  font-size: @text-lg;
}

.text-md {
  font-size: @text-md;
}

.text-sm {
  font-size: @text-sm;
}

.text-xs {
  font-size: @text-xs;
}

.text-light {
  font-weight: @font-weight-light;

  &-imp {
    font-weight: @font-weight-light !important;
  }
}

.text-regular {
  font-weight: @font-weight-regular;
}

.text-medium {
  font-weight: @font-weight-medium;
}

.text-bold {
  font-weight: @font-weight-bold;
}

.text-lh-1 {
  line-height: 1;
}

.text-lh-1_4 {
  line-height: 1.4;
}

.text-lh-1_5 {
  line-height: 1.5;
}

.text-lh-1_5 {
  line-height: 1.5;
}

.text-lh-1_6 {
  line-height: 1.6;
}

.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-lowercase {
  text-transform: lowercase;
}

.text-capitalize {
  text-transform: capitalize;
}

.text-uppercase {
  text-transform: uppercase;
}

.text-left {
  text-align: left;

  [dir=rtl] & {
    text-align: right;
  }
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;

  [dir=rtl] & {
    text-align: left;
  }
}

.text-nowrap {
  white-space: nowrap;
}

// Background
each(@generate-colors, {
  .bg {
    each(@value, .(@v) {
      @suffix: replace(~"@{v}", "@", "");

      &-@{suffix} {
        color: @@suffix;
      }
    });
  }
});

// Grid
@displays: flex, inline-flex, block, inline, inline-block, none;
@aligns: baseline, center, start, stretch, end, start, flex-end, flex-start;
@justifies: center, start, stretch, end, start, flex-end, flex-start, space-around, space-between, space-evenly;

each(@displays, {
  .d {
    @label: @value;
    &-@{label} {
      display: @value;
    }
    &-@{label}-imp {
      display: @value !important;
    }
  }
});

each(@aligns, {
  .align-items {
    @label: @value;
    &-@{label} {
      align-items: @value;
    }
    &-@{label}-imp {
      align-items: @value !important;
    }
  }
});

each(@justifies, {
  .justify {
    @label: @value;
    &-@{label} {
      justify-content: @value;
    }
    &-@{label}-imp {
      justify-content: @value !important;
    }
  }
});

.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flex-align-center {
  display: flex;
  align-items: center;
}

.flex-justify-center {
  display: flex;
  justify-content: center;
}

.flex-column {
  flex-direction: column;
}

.flex-row {
  flex-direction: row;
}

.flex-1 {
  flex: 1;
}

// Border

// Dimension
.h-100 {
  height: 100%;
}

.w-100 {
  width: 100%;
  align-items: center;
}

// Whitespace
@whiteSpaces: pre-line, pre, pre-wrap, break-spaces, nowrap;

each(@whiteSpaces, {
  .ws {
    @label: @value;
    &-@{label} {
      white-space: @value;
    }
    &-@{label}-imp {
      white-space: @value !important;
    }
  }
});

// Opacity
each(range(1, 9, 1), {
  @label: replace(~"@{value}", "\.", "_");
  .opacity-@{label} {
    // color: fade(@color, @value * 10);
    opacity: (@value / 10);
  }
})